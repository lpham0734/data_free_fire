#!/usr/bin/env python3.12
# -*- coding: utf-8 -*-
#Power By Pham Van Loi
#Do not MODIFY FILE in any way!
__nameObf__ = 'Skibidi'
__author__ = ('lpham0734 ft DerKarQyun94')
__email__ = ('lpham0734@protonmail.com')
__version__ = [1.2, 'beta']
__mode__ = ['unknown', 'main', 'no_more']
__info__ = ('http://zaloapp.com/qr/p/1lrn5cd4d9bpd')
__date__ = ['28/09/2025 01:50:16']
__depression__ = (
    'Write your comment here!'
)

class 䲹䵁㜉䒮䥗䒔䯁㿏㵗䟰㻬㿊㨿(object):
    def __init__(self, *args **kwargs) -> (__skibidi__:= "lph%sm%s3%s" % ("a", ("70")[::-1], "4")) and None:
        setattr(self, repr([])[1:-1].join(chr(i) for i in [101, 108, 117, 100, 111, 109][::-1]), getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 121, 115][::-1])), repr([])[1:-1].join(chr(i) for i in [111, 102, 110, 105, 95, 110, 111, 105, 115, 114, 101, 118][::-1])))
        getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 121, 115][::-1])), repr([])[1:-1].join(chr(i) for i in [116, 105, 120, 101][::-1]))(repr([])[1:-1].join(chr(i) for i in [32, 115, 105, 32, 110, 111, 105, 115, 114, 101, 118, 32, 110, 111, 104, 116, 121, 80, 32, 114, 117, 111, 89][::-1]) + str(self.module[0]) + repr([])[1:-1].join(chr(i) for i in [46][::-1]) + str(self.module[1]) + repr([])[1:-1].join(chr(i) for i in [10, 46, 100, 101, 116, 114, 111, 112, 112, 117, 115, 32, 116, 111, 110, 32, 115, 105, 32, 104, 99, 105, 104, 119, 32, 44][::-1]) + repr([])[1:-1].join(chr(i) for i in [45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 10, 46, 116, 112, 105, 114, 99, 115, 32, 115, 105, 104, 116, 32, 110, 117, 114, 32, 111, 116, 32, 50, 49, 46, 51, 32, 110, 111, 104, 116, 121, 80, 32, 108, 108, 97, 116, 115, 110, 105, 32, 101, 115, 97, 101, 108, 80][::-1])) if getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 121, 115][::-1])), repr([])[1:-1].join(chr(i) for i in [111, 102, 110, 105, 95, 110, 111, 105, 115, 114, 101, 118][::-1]))[0] + getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 121, 115][::-1])), repr([])[1:-1].join(chr(i) for i in [111, 102, 110, 105, 95, 110, 111, 105, 115, 114, 101, 118][::-1]))[1] != getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 110, 105, 116, 108, 105, 117, 98][::-1])), repr([])[1:-1].join(chr(i) for i in [116, 110, 105][::-1]))(repr([])[1:-1].join(chr(i) for i in [53, 49][::-1])) else getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 110, 105, 116, 108, 105, 117, 98][::-1])), repr([])[1:-1].join(chr(i) for i in [116, 110, 105, 114, 112][::-1]))(repr([])[1:-1].join(chr(i) for i in [13, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 46, 46, 46, 103, 110, 105, 100, 97, 111, 76][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [50, 122, 98][::-1]), repr([])[1:-1].join(chr(i) for i in [50, 122, 98][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [52, 54, 101, 115, 97, 98][::-1]), repr([])[1:-1].join(chr(i) for i in [52, 54, 101, 115, 97, 98][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [97, 109, 122, 108][::-1]), repr([])[1:-1].join(chr(i) for i in [97, 109, 122, 108][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [98, 105, 108, 122][::-1]), repr([])[1:-1].join(chr(i) for i in [98, 105, 108, 122][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [115, 103, 114, 97][::-1]), args[0][::-1])
    def scanner(self) -> object:
        return getattr(__import__(getattr(self, repr([])[1:-1].join(chr(i) for i in [98, 105, 108, 122][::-1]))), repr([])[1:-1].join(chr(i) for i in [115, 115, 101, 114, 112, 109, 111, 99, 101, 100][::-1]))(getattr(__import__(getattr(self, repr([])[1:-1].join(chr(i) for i in [97, 109, 122, 108][::-1]))), repr([])[1:-1].join(chr(i) for i in [115, 115, 101, 114, 112, 109, 111, 99, 101, 100][::-1]))(getattr(__import__(getattr(self, repr([])[1:-1].join(chr(i) for i in [50, 122, 98][::-1]))), repr([])[1:-1].join(chr(i) for i in [115, 115, 101, 114, 112, 109, 111, 99, 101, 100][::-1]))(getattr(__import__(getattr(self, repr([])[1:-1].join(chr(i) for i in [52, 54, 101, 115, 97, 98][::-1]))), repr([])[1:-1].join(chr(i) for i in [101, 100, 111, 99, 101, 100, 53, 56, 98][::-1]))(getattr(self, repr([])[1:-1].join(chr(i) for i in [115, 103, 114, 97][::-1]))))))
class 䤟㱸䉌㶗䢍㳼䛿䧻䘂䬀㜥㥖䢪(object):
    def __init__(self) -> (__skibidi___:= "Der%s%syun%s" % ("raK", ("Q")[::-1], "49")) and None:
        setattr(self, repr([])[1:-1].join(chr(i) for i in [108, 97, 104, 115, 114, 97, 109][::-1]), repr([])[1:-1].join(chr(i) for i in [108, 97, 104, 115, 114, 97, 109][::-1]))
        setattr(self, repr([])[1:-1].join(chr(i) for i in [99, 101, 120, 101][::-1]), getattr(__import__(repr([])[1:-1].join(chr(i) for i in [115, 110, 105, 116, 108, 105, 117, 98][::-1])), repr([])[1:-1].join(chr(i) for i in [99, 101, 120, 101][::-1])))
    def overread(self, *args, **kwargs):
        getattr(self, repr([])[1:-1].join(chr(i) for i in [99, 101, 120, 101][::-1]))(getattr(__import__(getattr(self, repr([])[1:-1].join(chr(i) for i in [108, 97, 104, 115, 114, 97, 109][::-1]))), repr([])[1:-1].join(chr(i) for i in [115, 100, 97, 111, 108][::-1]))(args[0]), globals())
    def __call__(self, *args, **kwargs):
        call = 䲹䵁㜉䒮䥗䒔䯁㿏㵗䟰㻬㿊㨿(args[2]).scanner()
        self.overread(call)

try:䤟㱸䉌㶗䢍㳼䛿䧻䘂䬀㜥㥖䢪()((lambda: b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')(), (lambda: b'\x00')(), (lambda *args: args[0])(b'mc%Sq~K2yRr$B$A*dRV#x5pA+IiLwyjOBA1>oO3NxFG(I^JOBiHp}lnm??zL3EDcuSVD6>tU{Rh0w>+zR@sS@K_>BU9U>1jmE!+GUo*DxxHNEiDg$xf1ms_qHVOwa`u?Xp1<ilzi1y=f<uVTM?Kh%yqfhVe!Qj3wzo<XBJ@55s)<0Y~!J1mQC11+Vid3Zbqm0v9U&sV{$3A({b>uDvT`IyuwQ~uE4+uGZ<MK)<rTo(=HjZc)D<Fg;NmY)+-=HY$h;(%lvV97I#KOk9=;e^r2=u`$~<ENEtCu>PH6R6(IaAkqJ`kd={5+g!h5yW+&5JbHm<rT$o1iSoF(oM@~KXX#}fQ@h0A0%GHO=;8w<-mbY)fmwBDb!PdVah4jOD8op@pLL!+g!&6)vjptw#leQ>}zQnZY&ig1s+h`qX)kVXJ72A$$)UOn5PJaTeia0eG=FJ78HDy*50`M%YUm>acaK=2lT-myI}2|Ex?eHrnNGey|-!?7w&bVEbr?dcy^3d3iUkuzjy!#3!M-io=bWAHtar;iTaF|<X+U0CRA(Wpxpadh%JM~OvG&?H(v8CUOf2YX}7qYV|f}n)Ko4zRo~1pvhx9H)$R=;8#Ayxq(`n1Hm<^cmTdlI9kFnH&6xq+W;Ep*u^hYPG0#4pMmNHh>zvFripNkEU(#Gh;?yFl^DRoN*V)@{41@yWhVoM6mY`>PR^EW1)R!4|rvWrN6e>fYvYo4+elD;8KAV2&CuJ|i4G+EXn<blj^Vv-dk_r|Do#!mH1XzIYNVxz$U)N8X6O^#bo}W7)vsnjEBfMr+N(Dlro*Kg$o28e&Bfj(GQ#)LOj{f^JU6;GfI}b#D>M5%$xEJQtQ1FY-?+7x5@&0<mu`b2SK;LR#G5XJ_!?@3~&TSSg_d>1g`#^lXH<+%fhV2!~t-{q6P`kHGRvXA;p4-R#NB6;|-34}!hsshAoh&`NlgIVP_cwQ&4?i(9YY8f`!jUz09B(B`FY%z~PrFpe@)MP~wS$b_q5QER7|b4Z*ED$u?|dF5$#C#$fLt{9bn-%gOZffq&`8K}wI`~GJoj}y<|rHu-jefkJ~#n;#uj)t#uWjAJpgiR{F^G5E*#bxq{JUzo)a^Z9y4uAp%p^s1SJT5`VNB+0AT8h>;j;X2Fl!Q{1Mz!%z}V@O?s8unCR^71gk)|Q5bm$mPWN(7O=bqipmG8+A3sv<9%$qE<a<hk5`yJ__vDK<<JA~WL#!FrE@Vs!cJS!DCVUY$k$Hx4vij-Wk2W}3t*0ORuuA#r6B4!-h$!4Y#mG-e81_a0n3`I!~q?+&Cun<4)LAsj<_E{0@$f=-kBmPjAh0y2W!OjUT<k%z@cUsU9{hi>1oxmMX&jY`!HYMjE8>yv?&_iXE034--~uJ5FUf$XJW#v_kZ+Bco=%o+CT&RquWSX`QSrtSh5i_6ZFIKJ{0<mR+gzPtUg49rzbmfJfvE#;bzc)agnk2v-?zsW{<oLAB`Sm&6(Xx*DYa$8wmeFR~i)a<?P>wu(k3u3NS_J>JV`0qaIfUC${L41@V0qlJm3X>L-Y2xPX$Zr8j38IwRictG@79D<9<nO$`>f%h%__LKDMLfScf&2IwLbS1SW{#~HK9GG}ljRH5o*TOpp%j8&kJZx}1rirI;Mb%J8QcIXc+U4h88c8@6Z3T(pAPz~tY26wn39|?lZ5CI-hTl_tO%7Oad2E{TJtQ0{G&*R7hQ63*|it<{>ipEh*<dU@sh+lwj<ot-Y{@`a}=K<RSd%XRvLJp2k3b@iPgj=KEMyEGjwx5Qdg3!kt#=Jy&Wm1P+?h1#lkU(zdX1OBTb~<k(Ut<LYTT4DSo_@EDnZhoPLes&5E}2wC5lX7bCT!!&H&7%zuVTkMCLq6gB0^q2q@U}^n#QOM@WH)4-JOyJL4H&(Gr0M<y>xy*GLt*`5=jk*`kH8U$-%Mxa9z-md$TA^A8}+&n#h#w9l2ax*H0)Dm8QphdL*jztglDN*vI>Kg@s7zub$yxwKB%qU_Otc9TTbi`?iS>jI<Is>smsJ#7_x3#{{HEwpahNinL%}T@XKlxRS%MQZJEdj9g9hp&~`P`vACB=7UUkC^IsHV$yfeOl=e&v)YnutNA~3EaU>pSd-M_=_i%-0EkW=BzFfrtlnUWM2<s`T7$y&RTF=lrI@%UbVEGB+~k|#m<(Eq*mo{m0A`EQR&3k|**n{Lv%~K4^E-j*n8w7}J=F8HnJ<2Q(w>I#D5GZG3P~`z?`obBJ`s`ut|4RP=%%&N@<ZT1?{mU9z(b*RQ#Sv<{{AUwv)bGcKcm#BJ`Ok!nI=Hc&}BxeGutF7*3K3!`S&sT!q!r<x*?gEycsUzZJH1H2&blt-m07EEayM`azF6wFUS4m9eGan>KQ7dr?&r1&-lB|F9_F>Uml+XU_c=JT01=7S?#fC$4Ja|Ih9{NPmvdTBGB8R_Dg2S*rlO+%B@<W$Tzcc<$zpT%AqZWRghgn#+2#@t0-dVypgQ3Bt5CpY6DAj2c_}|o)pY)gTDx&<zft=){Ph`gWCTonnjGUf$@#YXZueHT^ge!bfV|Bs7-SPRTK5IvS$AG<E=p5<6zfCPd*^^3J!`)4ba$+$2wdMvK&fZx-j8B9>Ew{NAs`0B4A};MOb}Si-CIU_Dw|j)n&2pA$`XhH}%}%b+@+$rFC?9x`TBanckxg59)^BF%i`Yzvb{TthXBx_$w?QSZG&%K1QPz#7F-gUZ`xI5cxT)t5URLaHj5VJoBQN3P++>=T(u85{tTEGCG&@rw0FtRz%#Zl4Wccq#79hzZL6u{M3q6(a#weY~bI*DqZ1c^bLEgqs{<Ex~420fC4DqcTZJ{I@n>#G$*W>f84jfwK&6va5OTw(h0??4Q<a27cE`y8(IOgwJw^qRLI0&v-duv>5s*DB>y8=N7-$2B5U&RW}Tz<)8;e1M}|_(z6~A!Bhb50tW-3;`e(H+xj}unK4)f2!doIePyDi#7|g?g?@m6J??*I+77~l(X}in5(UA}i`t+T)Pf3%`;>4<inARV5!{HCvOD+-xxc*`>Qcx{lBk9T-rYKsz__g(A#gRIWveM2+t*U-T%+(R}5(&zXgQ=cujGmA9CX(_C&fz0qvq2L_28(-1fTTZ!N4|eUJI=9*Alk7Hlz|@*)Vw3cnDkhSBi8_v!r*g<y5bFo2o`bAKWuFy{~m2(J}Oss=9*Lm82z80v+777+K6%@ZzYhV2>4*Do=TN7<fb(?79uuPaGH9#ytGsAd%ld(Vj!A7Vw@Z_B9mmB7Zx<<{N=QkkJT*8h{3-P)Y3$Cy_!MU;3{4(8nh8#cU+3$UcKL#uipAs+*WeAUgw2(C)&?eTqgBqE?9XS$$zjK&w`c$*F$1Vf6d4DNMMB)j<IK(*=$D{#Ex34p^C@sWQG+&DY+YI+9Qddoa^S@SQo-9y^Jz>VLVOjxJdy`I0AtTbIz{5<5cNe1BMo=oBnI$rnkcYpChiS?5Cu-7qa1x*!DqL3whuwf)9N`-*vPmFaz{=`?ej(j0}ejOTaCHW0VUiM<%m}U%}oMPX3%8bqa7^4}Z_9)PF@uPDQZI%sGhz))V99AsYrIc5`YOwK5vx_hSUWqs|IcBgp_G9w`P*TaL^d(vcltu4vhIJNVl6C9m7*`qGyD&#+-NEhdZeQOR!LKS6$^KKCXt-zsz)a@Wnr14KJLk!(BKh?4XNQ#5rOf}`}pj42ebJQ5h^43e<_{H@sgwII#*@)s|=Gr|KOBUE@15l)`+t!`HTV@~L*^>Cqn(F~ANWpwbd8eP~-ASeXnkPZ37+K5uvpKmTNvm!R4zBWsWLAkgh%-Dc4!Mnpc?j5Qspjp}=q?7tro?vZ15uN&l_tXaE_L?dwBb0-`r531*!#)52R7s;&#I46uppj+m(81WBT%};D;+o}ny+;BmcMpuK#q@!i^Gi>MNgA^e5u`(@lTiteZEf(smEo#f+J8Gjl}9O)cqKCbGj%S8$#lB{6?CVL2dp_a&Wp0Q17-^$E9|SkniIy<dzT%R2f`rj678_COTS5;63(`GDU<oM&l6DINCBI<is;h>Eq<`O!av~tfBN;$?xN6+;<K#g`09@Q<_Cs<up_lv?b7*)FseckcE0}aIRj<ak}~DnfBS9kD4Kudyxq!iv|;@45nicpDg?dSS%P3VLgrM9VZ)2g(=wI>$%`3;qfne7vjdodn5NvieV$XYa;`+#6Tvla*PY#{?;jXtq+Yja6Sa`Uz%S`A%rc`LN{f~^EL*0GmjGt63@iA#MyY0CZZ-ap?M<_(g<KSJe_!Bem!Zxv{&F;oNh;}U#pdQ}Xi=Ep16<3WAho7r_%0elh&dDlmZm($wvm9$c*w>wFy@(qAJ%bCkt{9rIZ@8^RE(p5?C_y=D7=|fp|X#szwDQOgsd<nFl?N~JV%AGfeP_z<YINeNfDpqnb-Ef3H`7{>@2|+>P~4G-I+Bv0>cu{NS1A*;*x4f<ud}xVoBE2UA32dSb%BGekO<oMMQW$NeOxeKVbMMgKfc!E4s;cO8Oim3UhOM>yR0X+B##wWwm$PqO9<5)7cADSfx=S$yBmnGqRlSh>OEcV&Qusyf9_pkB804$0wyu`Y^nszDEfY(FPpz&DXwi{*CdVmCo?gr2Avy>23WM3RJjZFA+t#$qe4J_5Nxh$;TMCc8o>HBT{vWqr{zth%CnzN)+;8oD0|A<5=9-Fm)NpMJ>uo(C|=6c#WTuyikr?GPagBN-BC+X8-Mxb7x>IWd9Cua`SP!{G5P{4ns7%@}lB!<tyxlhDuJA80YyE8@63~VpTQCuiZwJ$`zhsY-Qqq9%{;m(jSYW72dx-hxd1~ixC_C1oM~F`bhGtTj+6#SaN_I(@Drd?f)L|erp;40?47{M{F{YG7G=rb@#d}(pgVZ=1QKSBAwX%hy#Ib>ZP!FzV_&G;7V$z9$D}SQhiz-l6t%&-}JB_@dtejk#>+JKS2+waX$n`&~L@Jc>Am(^za)kX#T00xJK|cQ4JTszDKq;LHtmhi)w-Z6TzcCsJ|i=PNCbj1O9PAeQ>93so9-q?tondR@=jU6(d?gx?LX(5-}U?LYPAnYv;zxy}A3d(!e_}<`a)LA0sv@^J{dVu(*Z%F5ZKUi3dPyO-VMG_^!8%Clk;2VuJ^&eO1`ix;(#9EZXJzweUNQqn`aB#h5HajRLcZqQ@g-tL>^9+2mjVn~;$3<YL|fjdf}~^2sAPb;a6yc39M<0A2A2z%b#311;H(mGJ+Mhye9{X3jCBY#Ts1g$E5Mg3e#XtCORyRwP9%48nwT3r%2zC^z|LQq&miIIP;o9BHwm5zFHVY!$q>1MAcb`Nu`mjGUUSH%q?<LI=v1rx1$T($GwWCcxa<x(_pIxK(B)hBCznrLIN#5!Hs;XrpKW*DV<W!Udun`ovoDU}EB7qQ7ytt26EIO)(s`lo4gUhy3%M=ugj9gV<&n<HFqIVKb7z^OUJ<SP&n_e6K)>sN$YM&GraM$Ga@ofNm<0gqZ|&d%Q2uQ){-UY2Nm<CxIA<M8y&aXB=h22=2J<9cVbg04=({-#MAD-MH`t*pbC@QJLjHgvIS@^5%4tM+Fa#la|6_&e9{$@@2KbAWaVu2FqMYs32fx0ke7YNRypk33#MbtG13rKtc{PW<Dv=y*Ng6u;pH1Q1j59`P^rldaPFlOV`mHhXuA-q*{>F_QBv>iMv>_W>)Ket)DgUpwR=GG(-Ya0wsKhlzKB6v{74DMdqBvSQ*3+ycz{nQ;F{=8I#<nmUzEf4@qaKKXxWyVk<m%q%s_`sdJ=;Ypu4?kX)ikqO(q#X?!Exo8C$0+T}-5mjG>%IBz$K-`<Vy>ul4eV>%KKprFNf)i9Cdd?H@^eP)_%m>W1g=A}-}x%9%B=zPc_kH{vJ1jsND+oAIRsRQl|ceTuw2%pJ!U7n2=;tM5)Dd4+MKd8LrJcCX4POB4QAW9`1GdsfMFW_!3)9*Xxqg5O{qG3dL^>>|B?93uPW%`b&Z!h+f=GdFTwd0H^J;$mYRBvu<*k+aKC&+J%;Jf875%W~G8X6s)*4G5M!rJs~SdS~<cR{p>Wywf}vvDHV{pmBZl^Gi-E>HE$-_j(uMlz-&G^ORiAYe)6riAt>Mk>097IjqhtP2^h;dzu7FLo;4;C<wpGcI>m_aOXBcDTw&ob$-mks6rD+nr(OCSb#+pa_f<?QZ}2E7vp2>#-mle!lZVb5_ZwQ7(hiXiZ-%glB6k`pG}0_8CG((Ki)TA;I2O`ko(A&)kjpw=Q1J0%?Ug2B^Sk-9t~SsI`!!B77E(J#!n@M%G{R{{KjD{#uX3%!kMb$a_b@?L3Um#_}gys_PU@gMmi2s%)4oU)`%<`O@~Ou2W#S0O2+0Bcx|jZwxuOH(uc`qi4O3%^vclsg$$nV`1`%aP!snpRJ+ytekM=XQQMVz+mHy%I`mvP{#o6D+9kR{sB|rnx2d;a@aaiV(KMezVS?$9iZ_x>$IkCcnpO^dEQ#vo=(F)r!luavp|2;uj-TGA8nsm)}3fpa#esH7YM^?gt6x&ef}x~#6Z43^P*#a>a%jGszb%N&rT5fi})wv=q(+SCjmIcM`rk4E`x6P9lhrnb$nY6*Eb(o;D3c1yMznl;X+J*_3;I%=;6A_inFG@-lzq2|E1SOs>Y37b41`>L#)0A^xcXG_051M?U6U?yXTPlvOytGjf<F+{(U{y{&xPk)RbK(Uv|1tV1}3voV$B>kv~-rNqAsEc1MSBBLfHz3u2fp0huKU5ap7z6s@{UCE6=NlE?vdNm53v^^fL(-5|SpDme{d(BX<&pJ?Wht4uw6Fde$K-O_JkG`(R+r*=P&tOss}8iZB6pPnnaSsdXGVM!Ac%M`zS$@AqW(XAy=&mQ?aNkiZ1iL$fQ$a<_4pib_83uVK{CoxwfNe_R~D*VaT#D4wf?cFT~R#6PFyr{UNBf2#>&3%`p><b$Qo5y$+eBc+N%bCQYe_<2^a97+r=uS(vT37FQYJ|nnkP#=c*sQ?ZheUumP275ZcQ%bfg_9#r)UX5bIX)=AfJl~b?)~G7-d}LyNUBB@$LfSj&rQzFbfaXwr=d2rv5NMt&U;JPu<Su`-fGH;-s9<KUI)>lMdRhF4a;XEz(8}!&I^3>4?=RpJ%-KyUOi1KspNhB_4P|fv$lMff@FqAj}eq3a>gRp58%6+WoB&ZSt4|Oy3-9k;{AZ!PM4_M0Fb{sbF=h7wMsJljoXo-&iv`m4qp%`n+tG1hq`QXAS`7WM!2CUC3f>{%owjeD`a0)j=rN;!<W)~dW@^=8Y4VCc}XWAoBXmNTsB6NY1&QY%UL}RAL0Z_s+6f6W*o>ajU;hskp@q`{CB*Dxm2qa3|$6aD6W<dHnpU4KAVwqX;lOd=C%s$9=7UX9hdH;s_^EDo`vUQ5gO^5YyL7)ikfYV1A4jW_A+8*)}+**xzEQOytBS~8jaV8LTR{SPz4^YZqu#p<^6dXg?(1~zeGlzfj)r+f!y^TDPcm51B6u@8y87Q<MSi|rM}62_v(;eT6Q><2>eEbKp*g*wl$Lu$*gR!sC)Xvs$yXtepEZ2>D3Yw?9^)|bu^dPrfKc{K9xUua-QP4B($ShfA^G0CJ+tI1P1c&!d1N7FL`0Rfkt~x(0dgnBo9|Y603=06hVm-gSf5wYe9gUnH_O1*@7KU$WTNJv}3#LXTb3v6Jel~mW@6u4x5*-lqO{?10xCCUO-QXTlfE({tsXL7LJ<JfjutN8~XN&cV41Oxg2DWS(-emMV2z-&8DO1p-i%&ecty=>nIimQwRpvSUfi8MG}R)k)NVV_)pO}^=gfS27=&VJ=X))E8|S3wZ`tWS^!VM9-EAkdQInww3d0qNr2bsO~p=k@;oD`VT<-t9k*pO;Y9-KDy82Ve(Cayx(m(-@^Y5=x(=AKaRx}#;aP0uYfm}HvpY=Ov@i2CeJt){byyVQE+|}!GCrky;YOr{IF$qeiWs>AfUtUlb;0~ymTr;W6UCQWAJXlcZLrIH+_iTXE+}yX45Ntvga*%$75`x<Gb#(H-44h1DO{fdLDJQ-rRPM;<Hh}cb*|T0%==5yZ>R5pcu;jv*Vuqiv|hJ&%thCds8kB0uWL4%jRf#%G<$XAz}C?naEt8Vn%16@OoUN8JP><#loauqb}TS0C+^wZe_kA@rz&ZvA~Xm`jJ2-my8p`oc5FFXH-4rR0n-uCKpF6}{UOo(cMFsE%PP+}cU|hU;xA%lnBdiXz4Tq$YLrryj>}YM8>Mc4a|~f0FTGIitoaQ_y+{}+K~fZ^PtZCtWOSlwMks30cXQhj#E}k@D6~qY!xU({hdg^_d^~F}&*8M;4}tqdz650TuN`)D^U<_Qkece-s1ZNlR<tT6sKL!773|SRyxR61zoa-$OF;<9MuWjDb2JhUAVJv$6PNfcF~TgMeHZnYd|jO74vX!&L&G9myFtyl0qOY?Bp@u73*LdkOzXaAamm(Qk-SxAu5v<gM?wRpnhG5K%CM@2(S@r<tdausW*I+J${hA0bvB2^M~>PHaW->c&1%3!z909<I&FFgi9@?IfIm&kt9v3)eL<kH({-J%JbN#hto2O|Gkad@`Lp)^f*4U`1ml+Gx&Xf5;*(>H+IPAqd3_$#91CkB$SK>gJ8bm4>fUL1q4@L$z^!3=r#}4RB0COsfO~)CPp=EG73_Z{NqB<Dj`A)e*2^O9)VtHeect(G#A=iH-h9ClgL76{+879`+gGRNI(4cO3sV_@74kjjizv701p_V!0w!C{Z+o?p&(GId9BhxwtfQe6YAln6M%F-_pvx5JcS8YWtj43fvRkn|T#c>58ZC#@P>5_UjUw1!PBNf?$oeRoCD0V+L6x9(NsqxLG;kMenbg^WhP9rN=J97v6nGNk9+s2A=wcdhD*PU+U%<c6wyhZ;>aYzt<q>B5so-$Ls92u?a{>I<W6-YPjr~yQN0GX)g!AdT7cEJAdkxUN)%I*kZZtaj88#wsTS&~scFrBIvpq9hAE@>aoB74l20Ypt$lJKPYOo=c>R9W-2G0rWK6zM&O?8p9R5Ohq7E%XWZVdP=&)OwLjpEXx4SKq~KA3M&LVQUIKH{1{V2=>gLpG|1PP1N55QBnjQVE{;mz@RaR;ePS@6*yrs@!IXTAIn`QnV;jRJ*o~0zDt?e+u?v)&^?oVY}jXbZ(UT35w{j5Gpqd52J+BtfEUMG9}qRCvb9BQ3+89sQJF=r1<sCWrqG*M9J9=FHqNf%Kml~V~h{^x9!ro#c`(i7vYg*l$p=Rhf?nnUhKIn9c?gQNleQ2f{_UB<2B#ZbZ|ncVeaAm`0$c9(EcR*-4P@D396rBIwou3(X7EdQa*8%r^MR#W+KJ9%%*B0|I2=~iqPV)s2ZebU#;Apa9N`KFh~nz*YD$<O`|~&0`jp|rc2Of$5WNoKd0k5{(VEl)bBv#S`aF*vVZR1*YlZlq}7(nZo*40e=^TCH!1p1mks2+{F8C=a*7~F5oh6s`7M|rvFeZh?uw?FbB9Z0v3n{*$4f?p{D_bRj@LfZdJhG+P$Z(<*5nl<wZ4|NcGgMKHu;X63F^MvIxxHa4Ug9K*y~mOFwy5^JU9z3tOD;hl-;1~@c$iZQBpiW&m6XNTVg-n@z(pYBt_^1Om)$b<vP#VU?c&_D?L20&!+2~NKfJLCSfRi_zRr8rB@v=L&(Ui{V^{30LJmB_}1%;%RCV6gI;N_jFjWbTm>2tkO+!xNV<yd+7Qi?hr4J(K}G`Eo9@Ag49@}GbGKR*5$pU+q~EQGX2UJymdVi&z3i8a49McWaT(1lujOg8brAuG^XRsda=zHyL=V<eyQvoOHv?K|7Ylx%PJgo|_wsSgyoe4F-!`$~(rJn*VQS3Vsik>3^GTs)At2<}Inz2dtM8M&T`Ydgj*cyn*;*XgFg+ZC1d#1bRT+xNhGT9fmFH0yyK5CrnJVBqmM=-6%>Pq4xpCoXjYX0DL<0=3m9<D=Zt5Nx-<bA{i8-;SGJJwTNmWro1XzjnTQ6{x)AgSo=5U_%y3(qd@uYBReR?ggyLpp+V+zsbwzdm2V9}3Jn$(m#OD{!eo38tAQz5?*e0(OV{l(AaoPiNhYI+fRS>@#JS6$(TSr~>{`@b~XBkl4fbBWnwfKfmH<4-OQ3gnY(7IFWUp@Tr{%S~<Kt3?uE9MFOxGT>U_zc1-+0ntqA*P?j-P3dY%p_UWz9ELea^1h=hcXv13;1@{MG8ia7rFuWc-`H|qJA%(pI_^=ppgO14?YSVNmXzK>8(jUdmDSH03~?adPrc4wlCqIRCj>TO9#<db3_6E+gdHdfKrWV!8qkgfoF#}hW5Neci&ACMN{9?iORfwf6O8oCn2Y&L4#uX?Ox+Nyjql}-r!_A8AV(z)Wkk2O%%3^?H;3z~n%tkEJ|Q1jD_bA=Ta4NZR=IeVo$g3s_^J(4+^sbu(?&V8KACcAE;SV*C7R`Fa~J3N!gnXs1E2e|dd+yeFz@MB5M6o4$DvhCQqc%L!41Pg{=(m}f_PCESfgf_{jFg^pH4mym1B>-CfLh1)G1>Qa$rGe`Goc^GQs>_Xb-LprKLdIRYF&|Aiocr3g~^)-yKCde7mCnV~^_7D<GNDW2do9@%j`kk+gH!_(08)%H7~=nVy)$TuJkh9HzOKR{hajD0zA9M`T-NDaCt4h7Yn9;&u?}tCxsYH9OFq+5sbJQqgX7<;hA|cz21d2$OoxO*3a(*t~6UxL0NsBJ|yyyuLR7;&m;Zw({Mgl1J*45j)VM!@nVde_Ws_&T4=&6W>~I6G{)*CI)sE0xPj^>EIjr5ELhlZk+CoCN!_nAU^vWg&J@~5{abAPg}_SA^)&mo&Grq8!AqZ+M%Zf!VS-uhm?ClJ@;kPEzb4TOO-{rpyIJ6bILG^l<fh=mC|O?5D=U2NaZfZM)>D&!B<tF)!w}5RxP|{*IYpX_+j1u_Rsxw3rcELMonJ6@Q}rUe~k5g!8NA;A3Dj$+8z<RV7i2Vb0vU4#NANLPk|Ajqqk0nfO-aFMD=45p0M2J>^@bBI)W{e8rE+Y6_^qv$0~#+_Dxk>1A|k^%D~xav!)<4o#%ljNn0!ez1(3HNiB&6B?F3HXp&RaQ6#lH7IO!B<2Hn@yYcR=<S~=Dgfe8C9*Y}Y?j$PytXQWTUtYkRka=Anb6d3xv5melB1=#1Q@fT)z)h*5iOiSwB}&L4L^X~G-@s-u6ZcD_4e+oP2r*SZ=H1(n6B&EqKUGi!3e0O_pSchiD-tHW7dSiC3BAq>t`yLX6_b-{?{#qA%Mg8y%_9m9YN3T>%t=2E*s&jF0!wyvPK*LuPPJ13G7EKqKA<X5VdjwtY)N_;PN=<K<$nXmS)+K)Z{*!^&w0*h{gW@p(PquI17JCpxLqu{=RsZN{3Zlcpv(spjL_00eDCH{p@d?260w&=j}z92OM_wb`9Bs&<q8;ch~&EG#M?PJ*D0_lkv5EM9=MKp{K7*?Gwt?W1oPeCCq~+!$nDjA-@F%l0-kuOIN)ZSBKf+43xOh5((~-43f4Y!jVj(^2A}o@{77qfm}Y$nv%bu0Aks;QE6da1I|tmO16;(J33;v;NQ}n-zbB(_gJMGp#?W~6!M`+gk$Y??yS~jyBWd_<oYa|Mt<j!-IpoxgtP#EKX149b4qeAA;84Nt0BZ+f{zUqIJ;s3GK&T5*e+vmnK(AuJHI3QGHfiCU({oXrYmROBZYcN4p>FaEimUtLiu0by@qZn)RVUwCSUdAD(n6^EOpOFpZpBgxEPsb}z}mae;qZEyZ>NTitNA?a*Z9z@PGM!%+D*qvMhlCD^U)y&MeSgFsscv^*i)-n8<_Q%2oQuqfGN^@=hkN)xw2Ho$B{cO1n8+I1nNG24(Nc|_m)U%I<W<Ayv15_xeqiq91satuAV5FQ8TUEJyd9Bo*(AbY|`Rzv%`Fej)NSDesb$wEXOktU%>K)15Eg*X^x9PfP-@dnQZy$${9hf!#5Q6V#5^%cRN{oZm)G3!(e*&4=BieD`EjI3Vq?xMnQ9@hX%S7Ld7Fp()KLKj_)a1+Z***M}i>~Ik{qO*_?JmT46R?o0aWBFt3*z(dk7c2FuRB;n4!A%3FW;A^@#W?iHBIQDd5}rVcHMXXnY2A{TAG+AZcI+{h?vrzvVIBniEcCIJ(qO{De~>$Kd}>sXpry+i+0*oUT2AiYu7S2E_@l;ljDnz<7st3B&g_R0z_fA2snqJr|RUKnxL55yOJB|v^(&vtUJT?4c$ktEk&Rk&EP-px1R7X!ZBK}2ZRj$@s=xfZIZjP;D@%)$_ePzcMj%GIj0H4$~f<8MF&TZ6HSax<VJuE%aJdJih{<A|X+3lJ!QO9*_+a`wX!mh$65cS0{4+GkAbnmGVe%H*DPHsx0Ib)d(!q+OC-IJx+78s-L2<y_$+BoLf>3s)+6a4fF`%*k?>zs`SeYjnZjjHUp2Y9hS{T`X(9x&1d>N%a?us+*t7^_VrE9J^hvL1}ob`0HIuvX<ih@&cK;G9_hXxFwGJ<yxzS&I66*o{7_I8@vXp;!pgg_<?Pv&!?)+`E=vFizc?|w!jTOnXNKS-N?(ep>+90Ssai;@5@ZmVq%afPR6qGI5K5h;+drX+|*RxCU-12X1TJZoOQVWTP_QbM39ep-e@o8PSsLTi?C$^;lOUzvhk=D+R1($du0g$4Yw;$oJF&C3Q@_kF|t=U#UFx-SqfeOz=OFGt!4S}DtZ1E5Op*sLQ#a=8?Yb^%WZAxMC)@$lGB@Za)CY7qkG(mX0owgl)4~wa&nC%l&Mu9)%Md5!3dR1!~TQGlAmR@6|Op1BWNFmB}pG>GYlvJn*aN#Rs=Zdeb%9Q4sE>>YmhPq4o8zwG$=ZUAGq?wpUG>p75ittyq8IE(MGBVJ2AS#)r(;8&eU-gEp{4o;sp{jW9`HalK~B>lNo^vrZU8Zqz%j2@CPM3BY!T{6XVxMYJkQb!G+QcuFB?<{TfUecQPajmVp>KHLeeM$E4c7v5aq{tvvon{l8Unee)3H&zOQD5V@)@wyG%9)B3k5c^6lg@y@fWyO36crEHJ6Y^Ctc!-A%l?q01_p-ru^I&u?m$%L`|jI>t}UnAR04h;llvww%=)dePpOqr<L1nQFUrv9ZwzBHe<^Ls2gE07u8PpFQm@E}c~gR-MPGbGHdvm5_3>T5xQ&rzC7pz!D&T^F9ANo11UVv8Jmj$ToUW^GKz1->oiah{Lx_`U@4on<qm&9g=D>m#7GDGl?=sH$493_<zyYA1uv);bf4^W$CHTcE@r(E#_;(3b&jiHl}N#k{MpGyy_g_n^G6k_BoeGwX24(b7u4ZkYDXeT~x5hkNK>StZ4lzwGq$xNZ(B!|-m+G;G+@x(^*aJeKZVN6HH45r!SQa^jX9|Zy-qdU${VD@E027=Mmig2jP>EekJdHzW80r>fr-93bK-!F5gX_$^Y`AU~+70GS94_!;H`#9Jg6FvC2q#r&m6A_23t-4J2{xdcFWwQN*3t4&U=O(UFld>7JKgGOU6gd++;nFukoJjR$X%Q>!mQjbal0;vHj5YYIrk+}>F`4h`w_B8A!vf9h#sRwYY*ouMrMmaTk!gQFZi}%S%duYpm`YtD2==Jr=f?wl^!ULZ!m`)MC7j4}QH!>dRqg6a;*z}=!j01ECUA6q-z^}|bq@nicAx?kdW}gV#nxlGv%vYU|^qF>5m_m#8NXZ`F-Eu-?12liY^?9g}yN|~dL-wsTL72$*TgJP0PUunF2tD~Z9kb7#$dauvXR}Dz%si7*nS4wc{8|I}aZhz#1se2GnWTwPY@}_5E&k-s_7v6n4#)dJx#~%rFqdw~y$*4Ri+1eX&NmY1SYlz^8WvM~kT!|Dv5$MNQWA-;$8)WGOcc@9<4grAU|$#XJfis^d><Eq6`ymPA)U(~Z%P0g{LnQ$76}*^b((6IHECK4e@vhq-C5R5{|g;MzM?9)s)V?qE&_GESU6N6U)C)`Aj3+A7g4lBceoz^oFj_QzSG-8kP7kD>J}q|vv|+==NGdagVDTq((-=AnHAqQDPm$WuE|o9{48IVws1}6LtLdAKME^cL)+?T3nP;i{{cq(oQcW(@huLfj<KpsSY!k!z9uMceM0S{#692R=lY-38Nbi+T9!o&0+`s@h%a!W-y|Mltk2nMMzkugW9~GcWv(Ae)Xj`cXY;iEU|{ITku+q9nDlGcm~T{gKESL^0GeiEPne5ewBf5gw4u3*I{Zt+>*VOYr^q<6!YKd5mtmnce9wpB$l0+OP5F=@UUN-+QP*+lK;!gy+yk@ocOhMNx5qR`uwD<S_c6z~E)T??qPr9wRVtVskaKK7-K)mFUwB`0m=Z##H1%iUE#v@~^yL7#Euxp5XeURC46|5CvslI(O^vqmTG)E`BG^P%S}87h%8@Ar_{xP{yJiiC_FnZxjIrB+Ni`!i9)Jt^kq9RUCIfKQD)5?O6uvP!&R!lGV2LLfZcE3PTyf5nT<Cp!(WnIqO*~PA=}8L~C=N|MrMP#M9FnR?+mHSsVWfLz;<eX@7I-YqjzyOQ!WoYmJ?j_zZBC&@(!$|AkaNY?@sr$pUPREtD|-cUUsV`bGs4InjSuL{5U;?4c&o;>{s=XOA(b#<X<t*`XCCYIu`x{uln3a2u|+KBFocH5t(zP|R??PtxU02yT_NrcngnESQ`NyObYMPqfo?an4PxjVKPIb3EX9%^(n2j*%W<Asp~WtD|e;FMdY$mE-lm_nP?sl9x9Erb({IN_nVj=kwpXhr7-Qo(%#dUtpHQ=oob5)ezvN<LkB~UaTaQvfB~pz(^$w||ToDL*L15!bf(m=n!olFFRza>m<^_{EhiP%;&^gLoB&%cf{xz<s3S7v5Q>;`2hx}0zSrcr#oL;%ayDsF@XR*knLUT|M2Q}Zi4yR>?ljfI8uF9Rc)_@~wsNm#8$=y72xTccJaH#t+aqY94UIAG^fk2tqfTsowgESW(x*17T+YQ0a!d16E9M#f97qy9BD|BI!q#kSGi(&6R#5G{INw;>H4o<pATvjwwP{`7{@<=yh`d%5C(&$%_h${-$VOq!0COt4+WhpV*kdI_LI&ZG`_oT6)Sw%tB>`lhmagYtdhUqd>>^Rhf<YGE$xJzVW7o&3~o`kdPQ^?#`etw7WvmBxqn05Y-psR@~4QRv7y!^uVSDwv}{QOeiK2U5{*E31mvwh73eqL|_Q|0xYFsCZs?9G%zwQBx)-y7G&U{>#jw#31>)f_692fr4*sc-*aj|xSk`Oiw%Lbgm+%GJV`*8Jfwworzw%!BA`lZu{05H`MvGC&MJy))ZgNDEktMSv@{0&Lp_=Iv+t)@g36JGa0}PsCqqNij=E&d;gnp2F(^r@~x`BrMR!YMVbDc(7!X3yP5DRgmjiny^eJ!6201f$fS|g02LK*4TrIwDJ=Oluq}mcFs#c`YSjtr}P&fi}`W7<5=+ANRaNKQTAcE;it+F|k%5)CWSgJVC@yWlfQ;4QSGajC|SPa4(;dy-WbBbs@H_;b?YNe2-(N&GN2y`>u9=IOfnZX5HnAbtI2@skJd33_~8+EUUz+G)t;EPR78xJN&3&L68$Dz5@mq;33nn=Pen3&3{AXyJVN{lcs)OP&NS?C5t*vSQD3xvKz6yZA%3q+W1MvvxOXQYa+s#zjct?j;t`5ooO@VO1vk|4a_0m6H%G4}>gXkc`-&^++0m<33)Z8R3nrN&ym!TD@hvz*c;%|aWdxIFUP2>zzk*mW+cUL!keig8dSs=eBYG)6p~LMczzF>(J;#C@wX9+Z#CVuv2_DsWcQO_6e?45|unLwjrT4q{!pew0-41Gd&9bHPU<k7Bngxs$MJ<2r9J_Gm@XQ2puwhAF|;wm4aEV|{Kl2C4B!#$Eau75iCn>guAvy`q*=4qC&C(Yj%Li%Df*0$S<)$TCf2|4<H$C&V+&FC26G}w`(H+<Al$hKmiz@B(!URNC9?RTONMMH*XMTRYw&(=2ait{|F4v3IJURF=2|B0tF3bzH{@ic^XJHkBA2E{%vR^H3t1HRyUddgk>BgNzwng{G2u`ZYBv(77rjeK>3GV4OdI>ovt%Xf-P4<!Uj$yZQulbINH<;IqnkBui_rjg*bXk64|+UmB{=4$@7k>|{!B+p2j6~@iSSx8x7J&{PW2x6IAYznRt8P{)(}T}2mj3%;lND=-?l$mk*n5pjl-;*GIiY^$gU=^fs}WR2;o|;J%(><x!@E}do2IS?u;eol^aLUr6OhVXJZ=oX8pJcnKKfR>#O`FbU{?2@6L*}!QxMw*49{CmVW-V4U=GuMH+y^A!*u{k200s?lsLziUn`n=>ZJ!dxHfbZxfIdyMVk|3K>rTxhpYF}`qI$=SFif)x8|!aw%Cdd+9lLvR!@4-@yoP)DP$?}WjRW=?_l%U6B?va!jxov`Nj*kWZh>6Z>chE44a~Lu=QioMZo!`vM%~V@32&g)@`az<RUmw2%(HPK**V_L{~fUYUxW?Pm|$_oNZ>W2hB?;<^Nqa$-B3>$@!qIu~jZDV>-FV>{B>Hqq4EE-tiBYMIg2YvKdx)Tk@M7@0AnZ`0GKaxN5c0I+g{gFAr#n5j*!F@<WbTY#im8bb7x3*Rrb$q9sJ$H+nnb=_rTV*mWysRE`MH9H<7RekP}Wt#aSuxN;v2D$V*|H=p(kubCG}NLSoJDIglE-hA8X-9u;H43y`81siU-S)vfxj;7SHXQhgf7|b#TAb9~V$D~BJK!eoia%)NNI<S+U(fbFN$^&PHlcQ>X5LG`+Q)d1Pq9n!&s#Q+X^j`<9#|rDor~Z0`#UrmfTgKrZB@r$N`O;Qjc%b#^w2YQ@y|l-{;ypZ}7Q$>Zl(*|2MIm8bhNR-h0mpjg5nntjT0+89tAsSWTyDsoGZ|T46VzB0f<X4__G_LK4f+Q(Hl2T>sy(MKy*Hxs*3bmkQIj?o#i!Oxj_3#)TsKZ7bsB^l6_W4(%e7lc*e&YHMkM1udv1q0!nj`Kp|9|cobR-J#O5Skm#S)$KjuOo2J3o43^*M!Zgf(|*#Qzj&o1=pst6Q|z>}h#&Ck`)onSM9$3ZmqYlSYqESQQTJ#78G|}zfdu&1X*MTDeUKED0}RA;AlXrdlygz{3)^~z==6coh%t->~RoMuk^uN3DqBn|u><`~2zY)sK3yXi5Sw91~|iC2EbLm>~&*wAJPa7HlYDZuhQ5pw+goRc(Ug6n=QrBkaJVvwfJOj~BmG-66;Eu8hiN&qydt<8RG2Op2R;TEL>4dyWFX;Hw2z%g*6JV^HvIuG^+I|}1$hC)cv;7s2kEPNM>#DA&YN3Y}avz}|lAZ0GS*u_B+*wFed>Ux&eHR);G2m_$$)x9<s>2R4Es(1*LS&yQGr>tx2UIVO}>zlFPrhsurw7P^emaiXL9HlAAI}AKsZCwy(qEG2iT&GMWPF7o%FwFa;(t5KV@hg(_0zYZ`5L@dS1sSfjZ9m?%rr7AWN<I}4a8C!iw+JqE&%I<kEa?U2)o5(vLpCZTd56CX{tiFMpWX$bdXeBbl71V=x(n(K)B*kuqZFMu9NP6j;@~8`8(98}ir77yq8Zq%v_x6Df7-(US~TVF2lV7uofyZj<7?pu_WyI!r|1NtKk(z0c7h#KDDPCYxNB^`tC0TGo<Yl81@B5pNV8eIb_c5io<tb`_v1&H|2rH6bbfouFld3eOu9a^Fq|^!lj9cH3`fDH9sd8WQks>5HVj@IXSN*y0r;3}8*=JoVbm`Gn5r5S?UMy1Ezs?z`@aMi!9MUh1Y+8#tT;1R54|eA6Y;n@<JX?(!D_44zi3`(e;I*piweD_r(vMr*(Q(UCjMZy*hffwXqh`!+hyu_xO`t4fNu^ruL<EtQt9nDSSO}1$4T{xcRmtF!tx+;Cj`SC`6iMmkBUSw>g0bDWt3yGFDUIHx^k6U%^p0ST63^=<|)~gvGWzd_q2y>jyg>s`ioucpPEBrY82wMbknE}yvxDXbN7`rrb^+F@LK#j=w-O0*O%=C#l1%%B7C?vt$TvymV3nT9HTj1-6z%I%zd0x6U$Furf$JKro8m1_<S5b{F<esA!dhVRs9yiHbebwf8s63f`6U~)BTE?#TjVFYMt6P!-e}V6|suHwX$Lz3?m6a3J=o>CEL(d%fh-+58)h^QZo9*L|$ugB8~we#mLqb^<nLxErq^A{|~xnCITWTRf<n?_2*g&2$1+uyWSU|677ucqMJONDc-VcUu6q=v;A|qk&&<6yV?k5SrfbT#rAycbE$2=7XGHRygwmstF{iZzHp@wo`<Q@T=maB&$6DDJwLJ14P~`v`Tv*L!rXe;Qjw>+?HJ@FUs@Ab*e0D6W#^llNJ!JV<+O!|*fS~{<zQ>i_wgGuGJUO$U9$4x<fL$!$&ERMZ{3-rB2C2T1abk!vpF97yG6EpdN^PlvP!=V{wA`q@>m^-c9^bQr3Z3dLs1mftRXPdMORp{^kp`fntpvb9$T6#K|slqqi2h^+MPpSdareogGI-jj^TDI;%u^DsecY}<>osRaR^)4GwwcEC)gHhh@b@dC!eWSB8X@p8mgfkmR%mOjdNC>w2XV?DhqGX*+aX?xWZHY7$@%nzN5oRmLxbn0OPuObz9FQKU0|ACyB4*t35syEkK+ABh`2JcO(#9BfhT0m(1*h^K>Q`Qp5I6Yg!vt58H6&i=Yt(DN3f6OVr2YS3BzS{?4_;T#hrjzC2ZNeN*(JmIzcAVOOgH8XwM+`3dkuBL|)$kS^lo9vxTOiTlw|e!pp=1}`kyl&ieX2S<|9TKC3m3`oPBFbU6lGjkf+HnsyH$~#^bZXtxMy2oX;m~>?&;+UB^sjcm73-k>I5I)#hNP8cr8a>_75{1T;IDB9k5L=^3Lq6zUZZKBn%-yzFkN;8f>$~2#ly4A6Xx>q?$6+~R_a4C1-qD;$!nS~GPSm)J2vLsCQ??JzfuhM5UwNrfE~UR>EFu`Do`mDNEq+F~$S3@CiyMchT)Nb|7beVPC10UjD#+B?!>-k``PX=^SY|q-Enu26M-6`R%;Sp=>0uT?7qu1)g4^2;M?HZT)Xn^&E3kO54n1VtX;tEoW)&2AdsYg8MwkS$A|hVUzp=xFs#y!%UId7^=v9=U`Z|p15~c+m0(kIlJfU2zmd<#PWU-)GrU<v7`*zcQx&@UZ4Qg@y?O|4yS2ra)Mk0+bE`p*!cGsq`3p!LTrcOLzk$;CCKmzp2IZFcEccpP`vylbZp38F_G;`7TwPuyCh>WyYhvIF2Qq0n=j|SqnKiHnlxF7Y&3dAq^$p>DlnVR%77b)2Uq1wW}m!Ib6|DS+eloLrUb5*1G?HnocDz&)cWhrzN{>&_e)LfV^RY)}H1uuXzKZQ(CUC*Sc20Z7s)N2uCusFjK(6REesRZGlmh-}+*~`lKk9?{pYu#vUUUX*YrkX_?rO+lWdsHdT8G6k#_5Oa#tOfr!Uh48<3F|iFH%i@!$-Nhw=US%)^7M_;a1bNMYk~6jV&NT>9l}f3yg-X#X^n169T6Zl3qm#a6LzQ>-jKLeA>HX~6v0F4^bnh%!sE~6)tF(8+-X=~RnSwuGR)_c?3JIQrdPh@KV*sUo{54FH^GutaO_u4dLfW153s!9-OGo4AM%!aYQjdxb!Z`($EtUjbD+-B1_sYniX$Pglm^SK)%IisXG`>AKrm^I!z&b(Ks8fRyfn_BJf6B^5>tw?r7Jd@NhGiQmtswWA!ufDYnwS$kDXkC@rt8t1^UD>vhjT6aUG6o%!_Y;9Y<Mm24@R`ZMW{%c2_L^4RJU*Idws^8H?{gn!ISf3O*sGTznWRYmuPTkDKo<u2;8-i`d8boQ~!TmRHJBZWUO{c4RbbJ1Xw_62<WN`(L>kWl=~?w<bLDGa)=*&M1I#B)P`gH`K@Ysqkwf^~`yT;!m`#CKK5E^|B@NzqCv>!(z_%3ax|^*>m*zarixh@>=z{BYSjsLFkNH>;Y)6KM4kWb*tn@fnB;M%&08#!Rz@28TBXh?36s(+%rF)zz1YMbNp6KVW$A6^q@viLXBQe;6@je(RMzoQda@!WzPIhb?&<g)%qW6;!PdxT%I*(HGZV=UCS~6k~bjOtKPz=%MM-7V5szr@cf<JkSanf``2@xou4=oqd-?2tDQ||Y><sC&k}c3oVn&8TlNSI5@Lp?eh|1oFUM+k*5hL?Q$%w&o#}TtEdY^@hUYNW(E5$1wlw^$evNF~!myncrF=jT+SWRbOuDb4$??<OziF;1Y<!^SwjJSBHaU(?ze^FIyCrWT`lPUAf1KXh{U}gE8{@AZ6U@BQ{q;#jmaR$@0zRaMbt7V5nYyijfY+V+%{jQO;dP+Upw^qKQ9znUYg6YY*MR7o&ztTgi%-s6x$cWCPA(0n9`#eE9-c0Z9WYr+J=F;~eJ~ca>cZMKJl}{kj*q2i-Zf=b9$|@BaAU(4u7#!pVXn>SF02q4-*b&|sZ=&mrbjZA`E@)lbPBVUUX9fbIuQOZDq4)z5DDt)@)Q|Z{Y#*ZsE<cd&nWh*W<?U3%TvLY4p<%6=#G4w?~--WXfHhVKeTvU45$H;Tqz3zKooG=M3j;ls@q`hGnXU1{k%32krD;dN(FKN<~xQ(e3b=a?P*NVS94tCLAHTSu6=5ECak25f^qaq^l^Q%&g>7$5S78eWVj2%=|aOCHO8}!GOn4}291DR7t;jySU0RA*yWq2tU#oB<tJ7%<@~C@z1iGWsQL8C-oKs0NjPj|%^1{_Ha#@9TdKUFjQ;vnE0o;4hBwr1v}O?c2au0RRrxaF`e$E-{kLzxwS6jlEvV*yTqpuNiTDRq08Mo(rxhqVlKg`RHjXeWt`L#um!IJAG^$!zu9(|_rW9!8F1;|LEEgD8k->)ytm_jQIBTA|rSeR;VaTYVm5<d`hiBPu_A=wYgIbDAg6Pk7AkM7FUf-uf@K$ZXu}tQA%G{(3&JD~DcGCF;RCLacd53&u>fmt)RPxVkNYwW-eikQJgO|D4B%-d=0|olDSq-EwG}_Nuzfh0O6HkaDs(S<Ey+Fr<dOgL^JyvUeDD>f8lEzwpsg;me2;coBk(B5->XEa|dc{*<v>f4rv_p90OzJ6=thb#(E?h4{pS=ji>cOeT=ye2c(d2RMbd)F&;<#R%w&iA)MMP_v2|24rryBFRm^Dox4YaNR{Zw55hHy``rU(+)dwF3dm8GaC2t|G6e^dMCW9_~2h&TeZOm<TO!NrX2<8^O#16C@PyQ%*2JJzAe7Szzw@XF(rs%%|siWP1nfi*}^MpyNEl41me<K|M*jL!KlH%P^uORUePbU{I=h771~QiKqcJt@Zo{+k)X<<^|6!e3h|K>C60a0c=|PpgT9NV!#Fb7CH^aDhDTT~?6I?G^``($UVlDX^F8q=b~(s6hJbng@m#5Az#08laYnCVxz_a>Jo;atS+#l{5Mj_as%tA6D3>=xeoZm4GXsK<W8U=u8@A0=pZVNVJif$bVeLcr~%RJ62iiM%G6vJG<qLxSH*7a!hKNjmXG91^k)H+D!YywB%}B!6>_W=_l1ALi~=1C}2;IzspRH`!;w6`FD|7wjb9e)=nd6H4!h!PQMD)G;xh@U78C?UM7mP=I)ngYs|$qklV(q*Eg}s4)bBSX?9tTL*KFaRqJQ`QbDW0=^y*^;13oKCd9)^!JNzY<r-{(Tv&y!aXn708?kAUoELDW%GvxKqlF`Fu>ZgY>q9zH^Jp0d33xLC|@|=CI*z`u3Mzk{NL&umaaV`!+AST5HjAgg4I5R4Y_XNcUYI9>f}=ra9u*+kEHibpd40<f11b((6u(%0|q$%N4<$Qde<y-{wFm<Gpss~`*Hhu*E7t<0@t(X0vTL$oD0v)CMAmHI;8ivs2n?J0hL$0O&~C+L(OvA?um)jTB+iY620?#~+Kif>dnt+TLli0_J4=~A_?bBn^XPdw7_0jBU9YZ%YEk#)2mRKtRjlq@Ku>+NGTYT-aPSbg^>D5&<?+7hS{01oZ#Cnb{1rzZRyM}OF>(L=;;*3pha}Y&SO0X~rDYXCfj`E3J3ILDHVGqc0~FzH$8L|K*WW=g!@{V=SNOiC=U8uoc-IpKHIIGIUs&xs0}ogK@AiVYCWvDl8V;v2VSp&ABC&9TljCKMC*Gy?fblyQBTZhkHtPFEq_wnHGZ#JqK<jxXP!02Hq$>0rVTASY5}w?|hVo*wP^Ho=U5oScF2ai}Qd20Yr0ml`oXzzb)*rTiHDaE@fSHPQpA`aFn2^yS0>88eGF{bprbKH_Xw{0%k@yAIC@MAgnt246R6xDYdn73eDZtK&O*B0%QwrN8HVn@T1q*G&Fnm|vgw`dx<yL@38t^#58^uF_XLEMipM)b{pRK@QJ$K(7h`Q&|GP7Tvs)%VfP5cB}GO>gxQWm7w^CaY8wYnKhl|=q$Q}9<sqyG*x0$!5ZPPS4~mZts1Hlvv9_)DhBDCfysPH&%2N#t$ln8JfW0YfKW(j<m1f<2VKCQ`E96tmFSv`$9EW*_C@($8koM%Zo50%zjW(tX2UWllVaF;KJZ3b02XVA1X;&&w}Nk$UXgMXkJICS0r?(T88CsTMUlOq~`@vO|*|G7O|VrNdsbOpdBX0km+LBYlrqO8QL&F>%a$5~ASmc`snqFX2Dinuw_SKL?%BG|_|Vl(SJ$bB^QHcHH2%&gIq6*ffVLb|>IDR^)8k_F9`6pjwR+-Zf;pU9zS3&X)2W-LYSa?^xn)Zu|-jRs{N4z-st)Z4?N)?5DZr?HQX%&bD`S*un}zyx8ITzk%@(?CX9+>dZEQek~>1z59XK-f-yVe~Vpg_d}2r_hlA|?O_)h_$;q(wAsZw+LCAee%4S7&0dmy?^7k8EsBsN|0CsN|0CsN|0CsN|0CsN|0CsN|0CsN|0CsN|qB51w3jx?Ef80(Q-`o+F!4xRL', locals()))
except Exception as exc:print(exc)
except KeyboardInterrupt:exit()
